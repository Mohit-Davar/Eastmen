{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://iot/./src/JavaScript/graphs_maps/gauge.js","webpack://iot/./src/JavaScript/graphs_maps/graph.js","webpack://iot/./src/JavaScript/graphs_maps/map.js","webpack://iot/./src/JavaScript/graphs_maps/popup.js","webpack://iot/webpack/bootstrap","webpack://iot/./src/JavaScript/graphs_maps/main.js"],"sourcesContent":["/* global echarts */\r\nlet gauge = null;\r\nconst resize_gauge = () => gauge.resize()\r\n\r\nfunction create_gauge({ fuel_level }, selectedTanker) {\r\n    // Destroy the previous gauge if it exists\r\n    if (gauge) {\r\n        gauge.dispose();\r\n        window.removeEventListener('resize', resize_gauge);\r\n    }\r\n    gauge = echarts.init(document.getElementById('gauge'));\r\n\r\n    const option = {\r\n        tooltip: {\r\n            formatter: '{a} <br/>{b} : {c}L'\r\n        },\r\n        series: [\r\n            {\r\n                name: selectedTanker,\r\n                type: 'gauge',\r\n                min: 0,\r\n                max: 10000,\r\n                progress: {\r\n                    show: true\r\n                },\r\n                detail: {\r\n                    valueAnimation: true,\r\n                    formatter: '{value} L'\r\n                },\r\n                data: [\r\n                    {\r\n                        value: volume(fuel_level).toFixed(2),\r\n                        name: 'Volume'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n    window.addEventListener('resize', resize_gauge);\r\n    gauge.setOption(option);\r\n}\r\n\r\nconst update_gauge = (fuel_level) => {\r\n    gauge.setOption({\r\n        series: [\r\n            {\r\n                data: [\r\n                    {\r\n                        value: volume(fuel_level).toFixed(2),\r\n                        name: 'Volume'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    });\r\n}\r\n\r\nfunction volume(fuel_level) {\r\n    const volume = -0.000005744628532 * Math.pow(fuel_level, 3) + 0.009927196796148 * Math.pow(fuel_level, 2) + 4.150072958151474 * Math.pow(fuel_level, 1) + -162.312544323069432\r\n    if (volume < 0) return 0;\r\n    return volume;\r\n}\r\nmodule.exports = { create_gauge, update_gauge }","2/* global echarts */\r\nlet chart = null;\r\nconst visibleData = [];\r\n\r\nfunction resize_graph() {\r\n    chart.resize();\r\n}\r\n\r\n//Function to create a graph\r\nfunction create_graph(selectedTanker) {\r\n    // Destroy the previous chart if it exists\r\n    if (chart) {\r\n        chart.dispose();\r\n        window.removeEventListener('resize', resize_graph);\r\n    }\r\n    chart = echarts.init(document.getElementById('chart-canvas'));\r\n\r\n    const option = {\r\n        legend: {\r\n            orient: 'horizontal',\r\n            right: 'center',\r\n            top: 20,\r\n        },\r\n        title: {\r\n            text: 'Tanker Level',\r\n            left: 'center',\r\n            top: 'top',\r\n            textStyle: {\r\n                color: 'blue',\r\n                fontStyle: 'italic',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Arial',\r\n                fontSize: 16\r\n            },\r\n        },\r\n        tooltip: {\r\n            trigger: 'axis'\r\n        },\r\n        grid: {\r\n            show: true\r\n        },\r\n        xAxis: {\r\n            type: 'time',\r\n            name: 'Time',\r\n            splitLine: {\r\n                show: true\r\n            }\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n                formatter: '{value} L',\r\n                align: 'right'\r\n            },\r\n        },\r\n        series: [\r\n            {\r\n                name: selectedTanker,\r\n                type: 'line',\r\n                data: visibleData,\r\n                large: true,\r\n                showSymbol: false,\r\n                smooth: true,\r\n            },\r\n        ],\r\n        dataZoom: [\r\n            { type: 'slider' },\r\n            { type: 'inside' }\r\n        ]\r\n    };\r\n    window.addEventListener('resize', resize_graph);\r\n    chart.setOption(option);\r\n}\r\n\r\n// Function to update Graph with new data\r\nfunction update_graph(fuel) {\r\n    const now = new Date();\r\n    // visibleData.shift(); // Remove the oldest data point\r\n    visibleData.push([now.getTime(), volume(fuel).toFixed(2)]);\r\n\r\n    // Update the chart with new data\r\n    chart.setOption({ series: [{ data: visibleData }] }, false);\r\n}\r\n\r\n// Function to update Graph with new tanker data\r\nfunction update_graph_data(values, selectedTanker) {\r\n    // Clear previous data\r\n    visibleData.length = 0;\r\n\r\n    // Populate visible data with new values\r\n    values.forEach(row => {\r\n        const seconds = new Date(row.timestamp).getTime();\r\n        const date = new Date(seconds);\r\n        visibleData.unshift([date, volume(row.fuel_level).toFixed(2)]);\r\n    });\r\n    create_graph(selectedTanker);\r\n}\r\n\r\nfunction volume(fuel_level) {\r\n    const volume = -0.000005744628532 * Math.pow(fuel_level, 3) + 0.009927196796148 * Math.pow(fuel_level, 2) + 4.150072958151474 * Math.pow(fuel_level, 1) + -162.312544323069432\r\n    if (volume < 0) return 0;\r\n    return volume;\r\n}\r\n\r\nmodule.exports = { create_graph, update_graph, update_graph_data };","/* global L */\r\n\r\n// Marker storage\r\nconst markers = {};\r\nlet currentRoute = null;\r\nlet animationMarker = null;\r\nlet animationInterval = null;\r\n// Map instance\r\nlet map;\r\n\r\n// Initialize the map only once with tanker location\r\nfunction create_map(values) {\r\n    if (!map) {\r\n        map = L.map(\"map\").setView([0, 0], 16);\r\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n            attribution: \"OpenStreetMap\",\r\n        }).addTo(map);\r\n    }\r\n    update_map(values);\r\n}\r\n\r\n// Update the map location and marker position\r\nfunction update_map(values) {\r\n    const currentZoom = map.getZoom();\r\n\r\n    const { latitude, longitude, number_plate } = values[0];\r\n    const coordinates = values.map(point => [point.latitude, point.longitude]);\r\n    if (currentRoute) map.removeLayer(currentRoute);\r\n    // Draw route line\r\n    currentRoute = L.polyline(coordinates, {\r\n        color: 'red',\r\n        weight: 3,\r\n        opacity: 0.7\r\n    }).addTo(map);\r\n    if (markers[number_plate]) {\r\n        markers[number_plate].setLatLng([latitude, longitude]);\r\n    } else {\r\n        markers[number_plate] = L.marker([latitude, longitude]).addTo(map);\r\n    }\r\n    map.setView([latitude, longitude], currentZoom || 16);\r\n\r\n    // animateMarker(coordinates)\r\n}\r\n\r\n// Animate marker along the route\r\nfunction animateMarker(coordinates, duration = 6000) {\r\n    // Clear any existing animation\r\n    if (animationInterval) {\r\n        clearInterval(animationInterval);\r\n    }\r\n\r\n    // Remove existing animation marker if it exists\r\n    if (animationMarker) {\r\n        map.removeLayer(animationMarker);\r\n    }\r\n\r\n    // Create new marker with custom icon for animation\r\n    animationMarker = L.marker(coordinates[0], {\r\n        icon: L.divIcon({\r\n            className: 'animated-marker',\r\n            html: '<div style=\"background-color: blue; width: 10px; height: 10px; border-radius: 50%; border: 2px solid white;\"></div>'\r\n        })\r\n    }).addTo(map);\r\n\r\n    let step = 0;\r\n    const numSteps = coordinates.length;\r\n    const timePerStep = duration / numSteps;\r\n\r\n    animationInterval = setInterval(() => {\r\n        step++;\r\n\r\n        if (step >= numSteps) {\r\n            clearInterval(animationInterval);\r\n            return;\r\n        }\r\n\r\n        animationMarker.setLatLng(coordinates[step]);\r\n    }, timePerStep);\r\n}\r\n\r\n// Function to handle play button click\r\nfunction playRouteAnimation(values) {\r\n    const coordinates = values.map(point => [point.latitude, point.longitude]);\r\n    animateMarker(coordinates);\r\n}\r\n\r\n// Stop the animation\r\nfunction stopRouteAnimation() {\r\n    if (animationInterval) {\r\n        clearInterval(animationInterval);\r\n    }\r\n    if (animationMarker) {\r\n        map.removeLayer(animationMarker);\r\n        animationMarker = null;\r\n    }\r\n}\r\n\r\nmodule.exports = { update_map, create_map, playRouteAnimation, stopRouteAnimation };","const alert_popup_container = document.querySelector(\".modal\")\r\nconst alert_popup_close = document.querySelector(\".modal .close\")\r\nconst alert_popup_heading = document.querySelector(\".modal .status_alert_heading\")\r\nconst alert_popup_text = document.querySelector(\".modal .status_text\")\r\n\r\nfunction show_popup(status) {\r\n    alert_popup_container.classList.remove('hidden')\r\n    alert_popup_heading.textContent = status\r\n    alert_popup_text.textContent = `${status} Alert!`\r\n    setTimeout(() => { alert_popup_container.classList.add('hidden') }, 10000);\r\n}\r\nalert_popup_close.addEventListener('click', () => { alert_popup_container.classList.add('hidden') })\r\n\r\nmodule.exports = { show_popup }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const select_Button = document.getElementById(\"select\");\r\nconst loading_Button = document.getElementById(\"loading\");\r\nlet selectedTanker = \"\";\r\nlet factor = 1;\r\n\r\nconst { update_graph_data, update_graph } = require(\"./graph.js\");\r\nconst { update_map, create_map } = require(\"./map.js\");\r\nconst { update_gauge, create_gauge } = require(\"./gauge.js\");\r\nconst { show_popup } = require(\"./popup.js\");\r\n\r\n/* global io */\r\nconst socket = io.connect();\r\n\r\nfunction initializeTankerSelection() {\r\n    select_Button.addEventListener(\"click\", async () => {\r\n        if (!document.querySelector('input[name=\"device\"]:checked')) {\r\n            alert(\"Please select a tanker.\");\r\n            return;\r\n        }\r\n        selectedTanker = document.querySelector('input[name=\"device\"]:checked').value;\r\n        const range = document.querySelector('input[name=\"range\"]:checked').value;\r\n        select_Button.disabled = true;\r\n        select_Button.style.display = \"none\";\r\n        loading_Button.style.display = \"inline-flex\";\r\n\r\n        try {\r\n            const response = await fetch(`/widgets/data?tanker=${selectedTanker}&range=${range}`);\r\n\r\n            if (!response.ok) { throw new Error('Failed to fetch data from the server') }\r\n\r\n            const values = await response.json();\r\n            document.querySelectorAll('.widget').forEach(widget => { widget.classList.remove('hidden') });\r\n            factor = values[0]?.factor || 1;\r\n            create_map(values);\r\n            update_graph_data(values, selectedTanker);\r\n            create_gauge(values[0], selectedTanker);\r\n        } catch (error) {\r\n            console.error(\"Error during API call:\", error);\r\n            show_popup(\"Error\");\r\n        } finally {\r\n            select_Button.disabled = false;\r\n            select_Button.style.display = \"flex\";\r\n            loading_Button.style.display = \"none\";\r\n        }\r\n    });\r\n}\r\n\r\nsocket.on(\"Widget-Update\", ({ fuel, numberPlate, longitude, latitude }) => {\r\n    if (numberPlate == selectedTanker) {\r\n        update_graph(fuel * factor);\r\n        update_map({ latitude, longitude, numberPlate });\r\n        update_gauge(fuel * factor);\r\n    }\r\n});\r\n\r\nsocket.on(\"Popup-Alert\", ({ status }) => {\r\n    show_popup(status);\r\n});\r\n\r\ninitializeTankerSelection();"],"names":["gauge","resize_gauge","resize","create_gauge","_ref","selectedTanker","fuel_level","dispose","window","removeEventListener","echarts","init","document","getElementById","option","tooltip","formatter","series","name","type","min","max","progress","show","detail","valueAnimation","data","value","volume","toFixed","addEventListener","setOption","update_gauge","Math","pow","module","exports","chart","visibleData","resize_graph","create_graph","legend","orient","right","top","title","text","left","textStyle","color","fontStyle","fontWeight","fontFamily","fontSize","trigger","grid","xAxis","splitLine","yAxis","axisLabel","align","large","showSymbol","smooth","dataZoom","update_graph","fuel","now","Date","push","getTime","update_graph_data","values","length","forEach","row","seconds","timestamp","date","unshift","markers","currentRoute","animationMarker","animationInterval","map","create_map","L","setView","tileLayer","attribution","addTo","update_map","currentZoom","getZoom","_values$","latitude","longitude","number_plate","coordinates","point","removeLayer","polyline","weight","opacity","setLatLng","marker","animateMarker","duration","arguments","undefined","clearInterval","icon","divIcon","className","html","step","numSteps","timePerStep","setInterval","playRouteAnimation","stopRouteAnimation","alert_popup_container","querySelector","alert_popup_close","alert_popup_heading","alert_popup_text","show_popup","status","classList","remove","textContent","concat","setTimeout","add","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","select_Button","loading_Button","factor","_require","require","_require2","_require3","_require4","socket","io","connect","initializeTankerSelection","_callee","range","response","_callee$","_context","alert","disabled","style","display","fetch","ok","json","querySelectorAll","widget","t0","console","error","on","_ref2","numberPlate","_ref3"],"sourceRoot":""}